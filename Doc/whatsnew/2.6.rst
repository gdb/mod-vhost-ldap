****************************
  What's New in Python 2.6  
****************************

:Author: A.M. Kuchling
:Release: |release|
:Date: |today|

.. % $Id: whatsnew26.tex 55746 2007-06-02 18:33:53Z neal.norwitz $
.. % Rules for maintenance:
.. % 
.. % * Anyone can add text to this document.  Do not spend very much time
.. % on the wording of your changes, because your text will probably
.. % get rewritten to some degree.
.. % 
.. % * The maintainer will go through Misc/NEWS periodically and add
.. % changes; it's therefore more important to add your changes to
.. % Misc/NEWS than to this file.
.. % 
.. % * This is not a complete list of every single change; completeness
.. % is the purpose of Misc/NEWS.  Some changes I consider too small
.. % or esoteric to include.  If such a change is added to the text,
.. % I'll just remove it.  (This is another reason you shouldn't spend
.. % too much time on writing your addition.)
.. % 
.. % * If you want to draw your new text to the attention of the
.. % maintainer, add 'XXX' to the beginning of the paragraph or
.. % section.
.. % 
.. % * It's OK to just add a fragmentary note about a change.  For
.. % example: "XXX Describe the transmogrify() function added to the
.. % socket module."  The maintainer will research the change and
.. % write the necessary text.
.. % 
.. % * You can comment out your additions if you like, but it's not
.. % necessary (especially when a final release is some months away).
.. % 
.. % * Credit the author of a patch or bugfix.   Just the name is
.. % sufficient; the e-mail address isn't necessary.
.. % 
.. % * It's helpful to add the bug/patch number as a comment:
.. % 
.. % % Patch 12345
.. % XXX Describe the transmogrify() function added to the socket
.. % module.
.. % (Contributed by P.Y. Developer.)
.. % 
.. % This saves the maintainer the effort of going through the SVN log
.. % when researching a change.

This article explains the new features in Python 2.6.  No release date for
Python 2.6 has been set; it will probably be released in mid 2008.

This article doesn't attempt to provide a complete specification of the new
features, but instead provides a convenient overview.  For full details, you
should refer to the documentation for Python 2.6. If you want to understand the
complete implementation and design rationale, refer to the PEP for a particular
new feature.

.. % Compare with previous release in 2 - 3 sentences here.
.. % add hyperlink when the documentation becomes available online.

.. % ======================================================================
.. % Large, PEP-level features and changes should be described here.
.. % Should there be a new section here for 3k migration?
.. % Or perhaps a more general section describing module changes/deprecation?
.. % sets module deprecated
.. % ======================================================================


Other Language Changes
======================

Here are all of the changes that Python 2.6 makes to the core Python language.

* An obscure change: when you use the the :func:`locals` function inside a
  :keyword:`class` statement, the resulting dictionary no longer returns free
  variables.  (Free variables, in this case, are variables referred to in the
  :keyword:`class` statement  that aren't attributes of the class.)

.. % ======================================================================


Optimizations
-------------

* Internally, a bit is now set in type objects to indicate some of the standard
  built-in types.  This speeds up checking if an object is a subclass of one of
  these types.  (Contributed by Neal Norwitz.)

The net result of the 2.6 optimizations is that Python 2.6 runs the pystone
benchmark around XX% faster than Python 2.5.

.. % ======================================================================


New, Improved, and Deprecated Modules
=====================================

As usual, Python's standard library received a number of enhancements and bug
fixes.  Here's a partial list of the most notable changes, sorted alphabetically
by module name. Consult the :file:`Misc/NEWS` file in the source tree for a more
complete list of changes, or look through the CVS logs for all the details.

* A new data type in the :mod:`collections` module: :class:`NamedTuple(typename,
  fieldnames)` is a factory function that creates subclasses of the standard tuple
  whose fields are accessible by name as well as index.  For example::

     var_type = collections.NamedTuple('variable', 
                  'id name type size')
     var = var_type(1, 'frequency', 'int', 4)

     print var[0], var.id		# Equivalent
     print var[2], var.type          # Equivalent

  (Contributed by Raymond Hettinger.)

* A new method in the :mod:`curses` module: for a window, :meth:`chgat` changes
  the display characters for a  certain number of characters on a single line. ::

     # Boldface text starting at y=0,x=21 
     # and affecting the rest of the line.
     stdscr.chgat(0,21, curses.A_BOLD)  

  (Contributed by Fabian Kreutz.)

* The :func:`glob.glob` function can now return Unicode filenames if 
  a Unicode path was used and Unicode filenames are matched within the directory.

  .. % Patch #1001604

* The :mod:`gopherlib` module has been removed.

* A new function in the :mod:`heapq` module: ``merge(iter1, iter2, ...)``
  takes any number of iterables that return data  *in sorted order*,  and  returns
  a new iterator that returns the contents of all the iterators, also in sorted
  order.  For example::

     heapq.merge([1, 3, 5, 9], [2, 8, 16]) ->
       [1, 2, 3, 5, 8, 9, 16]

  (Contributed by Raymond Hettinger.)

* A new function in the :mod:`itertools` module: ``izip_longest(iter1, iter2,
  ...[, fillvalue])`` makes tuples from each of the elements; if some of the
  iterables are shorter than others, the missing values  are set to *fillvalue*.
  For example::

     itertools.izip_longest([1,2,3], [1,2,3,4,5]) ->
       [(1, 1), (2, 2), (3, 3), (None, 4), (None, 5)]

  (Contributed by Raymond Hettinger.)

* The :mod:`macfs` module has been removed.  This in turn required the
  :func:`macostools.touched` function to be removed because it depended on the
  :mod:`macfs` module.

  .. % Patch #1490190

* New functions in the :mod:`posix` module: :func:`chflags` and :func:`lchflags`
  are wrappers for the corresponding system calls (where they're available).
  Constants for the flag values are defined in the :mod:`stat` module; some
  possible values include :const:`UF_IMMUTABLE` to signal the file may not be
  changed and :const:`UF_APPEND` to indicate that data can only be appended to the
  file.  (Contributed by M. Levinson.)

* The :mod:`rgbimg` module has been removed.

* The :mod:`smtplib` module now supports SMTP over  SSL thanks to the addition
  of the :class:`SMTP_SSL` class. This class supports an interface identical to
  the existing :class:`SMTP`  class. (Contributed by Monty Taylor.)

* The :mod:`test.test_support` module now contains a :func:`EnvironmentVarGuard`
  context manager that  supports temporarily changing environment variables and
  automatically restores them to their old values. (Contributed by Brett Cannon.)

.. % ======================================================================
.. % whole new modules get described in \subsections here

.. % ======================================================================


Build and C API Changes
=======================

Changes to Python's build process and to the C API include:

* Detailed changes are listed here.

.. % ======================================================================


Port-Specific Changes
---------------------

Platform-specific changes go here.

.. % ======================================================================


.. _section-other:

Other Changes and Fixes
=======================

As usual, there were a bunch of other improvements and bugfixes scattered
throughout the source tree.  A search through the change logs finds there were
XXX patches applied and YYY bugs fixed between Python 2.5 and 2.6.  Both figures
are likely to be underestimates.

Some of the more notable changes are:

* Details go here.

.. % ======================================================================


Porting to Python 2.6
=====================

This section lists previously described changes that may require changes to your
code:

* Everything is all in the details!

.. % ======================================================================


.. _acks:

Acknowledgements
================

The author would like to thank the following people for offering suggestions,
corrections and assistance with various drafts of this article: .

