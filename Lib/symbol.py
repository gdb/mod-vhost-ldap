#! /usr/bin/env python

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
funcdef = 259
parameters = 260
varargslist = 261
fpdef = 262
fplist = 263
stmt = 264
simple_stmt = 265
small_stmt = 266
expr_stmt = 267
print_stmt = 268
del_stmt = 269
pass_stmt = 270
flow_stmt = 271
break_stmt = 272
continue_stmt = 273
return_stmt = 274
raise_stmt = 275
import_stmt = 276
import_as_name = 277
dotted_as_name = 278
dotted_name = 279
global_stmt = 280
exec_stmt = 281
assert_stmt = 282
compound_stmt = 283
if_stmt = 284
while_stmt = 285
for_stmt = 286
try_stmt = 287
except_clause = 288
suite = 289
test = 290
and_test = 291
not_test = 292
comparison = 293
comp_op = 294
expr = 295
xor_expr = 296
and_expr = 297
shift_expr = 298
arith_expr = 299
term = 300
factor = 301
power = 302
atom = 303
listmaker = 304
lambdef = 305
trailer = 306
subscriptlist = 307
subscript = 308
sliceop = 309
exprlist = 310
testlist = 311
dictmaker = 312
classdef = 313
arglist = 314
argument = 315
list_iter = 316
list_for = 317
list_if = 318
#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


def main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token.main()

if __name__ == "__main__":
    main()
