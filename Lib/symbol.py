#! /usr/bin/env python

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
decorator = 259
decorators = 260
funcdef = 261
parameters = 262
varargslist = 263
fpdef = 264
fplist = 265
stmt = 266
simple_stmt = 267
small_stmt = 268
expr_stmt = 269
augassign = 270
print_stmt = 271
del_stmt = 272
pass_stmt = 273
flow_stmt = 274
break_stmt = 275
continue_stmt = 276
return_stmt = 277
yield_stmt = 278
raise_stmt = 279
import_stmt = 280
import_name = 281
import_from = 282
import_as_name = 283
dotted_as_name = 284
import_as_names = 285
dotted_as_names = 286
dotted_name = 287
global_stmt = 288
exec_stmt = 289
assert_stmt = 290
compound_stmt = 291
if_stmt = 292
while_stmt = 293
for_stmt = 294
try_stmt = 295
except_clause = 296
suite = 297
testlist_safe = 298
old_test = 299
old_lambdef = 300
test = 301
or_test = 302
and_test = 303
not_test = 304
comparison = 305
comp_op = 306
expr = 307
xor_expr = 308
and_expr = 309
shift_expr = 310
arith_expr = 311
term = 312
factor = 313
power = 314
atom = 315
listmaker = 316
testlist_gexp = 317
lambdef = 318
trailer = 319
subscriptlist = 320
subscript = 321
sliceop = 322
exprlist = 323
testlist = 324
dictmaker = 325
classdef = 326
arglist = 327
argument = 328
list_iter = 329
list_for = 330
list_if = 331
gen_iter = 332
gen_for = 333
gen_if = 334
testlist1 = 335
encoding_decl = 336
yield_expr = 337
#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


def main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token.main()

if __name__ == "__main__":
    main()
