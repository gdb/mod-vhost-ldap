#! /usr/bin/env python

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
decorator = 259
decorators = 260
funcdef = 261
parameters = 262
varargslist = 263
fpdef = 264
fplist = 265
stmt = 266
simple_stmt = 267
small_stmt = 268
expr_stmt = 269
augassign = 270
print_stmt = 271
del_stmt = 272
pass_stmt = 273
flow_stmt = 274
break_stmt = 275
continue_stmt = 276
return_stmt = 277
yield_stmt = 278
raise_stmt = 279
import_stmt = 280
import_as_name = 281
dotted_as_name = 282
dotted_name = 283
global_stmt = 284
exec_stmt = 285
assert_stmt = 286
compound_stmt = 287
if_stmt = 288
while_stmt = 289
for_stmt = 290
try_stmt = 291
except_clause = 292
suite = 293
test = 294
and_test = 295
not_test = 296
comparison = 297
comp_op = 298
expr = 299
xor_expr = 300
and_expr = 301
shift_expr = 302
arith_expr = 303
term = 304
factor = 305
power = 306
atom = 307
listmaker = 308
testlist_gexp = 309
lambdef = 310
trailer = 311
subscriptlist = 312
subscript = 313
sliceop = 314
exprlist = 315
testlist = 316
testlist_safe = 317
dictmaker = 318
classdef = 319
arglist = 320
argument = 321
list_iter = 322
list_for = 323
list_if = 324
gen_iter = 325
gen_for = 326
gen_if = 327
testlist1 = 328
encoding_decl = 329
#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


def main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token.main()

if __name__ == "__main__":
    main()
