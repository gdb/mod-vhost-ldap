Metadata-Version: 1.0
Name: setuptools
Version: 0.7a1dev-r45519
Summary: Download, build, install, upgrade, and uninstall Python packages -- easily!
Home-page: http://peak.telecommunity.com/DevCenter/setuptools
Author: Phillip J. Eby
Author-email: peak@eby-sarna.com
License: PSF or ZPL
Description: ``setuptools`` is a collection of enhancements to the Python ``distutils``
        (for Python 2.3.5 and up on most platforms; 64-bit platforms require a minimum
        of Python 2.4) that allow you to more easily build and distribute Python
        packages, especially ones that have dependencies on other packages.
        
        Packages built and distributed using ``setuptools`` look to the user like
        ordinary Python packages based on the ``distutils``.  Your users don't need to
        install or even know about setuptools in order to use them, and you don't
        have to include the entire setuptools package in your distributions.  By
        including just a single `bootstrap module`_ (an 8K .py file), your package will
        automatically download and install ``setuptools`` if the user is building your
        package from source and doesn't have a suitable version already installed.
        
        .. _bootstrap module: http://peak.telecommunity.com/dist/ez_setup.py
        
        Feature Highlights:
        
        * Automatically find/download/install/upgrade dependencies at build time using
        the `EasyInstall tool <http://peak.telecommunity.com/DevCenter/EasyInstall>`_,
        which supports downloading via HTTP, FTP, Subversion, and SourceForge, and
        automatically scans web pages linked from PyPI to find download links.  (It's
        the closest thing to CPAN currently available for Python.)
        
        * Create `Python Eggs <http://peak.telecommunity.com/DevCenter/PythonEggs>`_ -
        a single-file importable distribution format
        
        * Include data files inside your package directories, where your code can
        actually use them.  (Python 2.4 distutils also supports this feature, but
        setuptools provides the feature for Python 2.3 packages also, and supports
        accessing data files in zipped packages too.)
        
        * Automatically include all packages in your source tree, without listing them
        individually in setup.py
        
        * Automatically include all relevant files in your source distributions,
        without needing to create a ``MANIFEST.in`` file, and without having to force
        regeneration of the ``MANIFEST`` file when your source tree changes.
        
        * Automatically generate wrapper scripts or Windows (console and GUI) .exe
        files for any number of "main" functions in your project.  (Note: this is not
        a py2exe replacement; the .exe files rely on the local Python installation.)
        
        * Transparent Pyrex support, so that your setup.py can list ``.pyx`` files and
        still work even when the end-user doesn't have Pyrex installed (as long as
        you include the Pyrex-generated C in your source distribution)
        
        * Command aliases - create project-specific, per-user, or site-wide shortcut
        names for commonly used commands and options
        
        * PyPI upload support - upload your source distributions and eggs to PyPI
        
        * Deploy your project in "development mode", such that it's available on
        ``sys.path``, yet can still be edited directly from its source checkout.
        
        * Easily extend the distutils with new commands or ``setup()`` arguments, and
        distribute/reuse your extensions for multiple projects, without copying code.
        
        * Create extensible applications and frameworks that automatically discover
        extensions, using simple "entry points" declared in a project's setup script.
        
        In addition to the PyPI downloads, the development version of ``setuptools``
        is available from the `Python SVN sandbox`_, and in-development versions of the
        `0.6 branch`_ are available as well.
        
        .. _0.6 branch: http://svn.python.org/projects/sandbox/branches/setuptools-0.6/#egg=setuptools-dev06
        
        .. _Python SVN sandbox: http://svn.python.org/projects/sandbox/trunk/setuptools/#egg=setuptools-dev
        
        
Keywords: CPAN PyPI distutils eggs package management
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Python Software Foundation License
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Archiving :: Packaging
Classifier: Topic :: System :: Systems Administration
Classifier: Topic :: Utilities
