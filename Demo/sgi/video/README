This directory contains Python and C code we wrote while we had a
framegrabber board on loan from SGI.

	--Guido and Jack


cam.py		network real-time tv broadcast; see tv.py
		usage: cam [packfactor [host]]
		specifying 'all' for host broadcasts

camcorder.py	record video movies or make snapshots (in movie format)
		usage: camcorder [-c] [-a audiohost [-s]] [-p pf] [moviefile]
		-c		color (equivalent to -p 0)
		-a audiohost	syncaudio is running on audiohost
		-s		start syncaudio (on audiohost)
		-p packfactor	packfactor (default 2; 0 records color)
		moviefile	(default film.video)
		keyboard commands:
		s	stop grabbing (single step if already stopped)
		c	continuous grabbing
		r	start recording
		p	pause recording (record single frame if paused)
		ESC	quit

statit.py	various statistics operations on movie files

syncaudio.py	record audio synchronized with camcorder -a
		usage: syncaudio videohost soundfile
		soundfile format: 16 bits/sample, 16000 samples/sec, 1 channel
		(actually, you'd better set the sampling rate to 16000
		with the audio panel)

tv.py		receiver for transmissions from cam.py

video.py	player for movies recorded by camcorder.py
		usage: video [moviefile [soundfile [skipbytes]]]
		- default moviefile is film.video
		- default soundfile is none (no sound)
		- if skipbytes is given, that many bytes are skipped from
		  soundfile before playing

vinfo.py	print a summary of a movie file

vpregs.py	definition of VP registers

vtime.py	virtual time module imported by syncaudio.py and camcorder.py


These are C programs, either for efficiency or because they need to
link with a C library.

squash.c	make a movie smaller by averaging pixels
		usage: squash factor [bits] <moviefile >newmoviefile
		factor		x and y compression factor
		bits		#bits left per sample in result (default 8)

squash2.c	make a movie smaller by dropping pixels
		usage: squash2 factor <moviefile >newmoviefile
		factor		x and y compression factor

tomono.c	like squash2 but outputs a monochrome movie

v2i.c		convert the first image of a movie file to SGI .rgb format
		link with -limage
