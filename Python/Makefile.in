# NOTE: Makefile.in is converted into Makefile by the configure script
# in the parent directory.  Once configure has run, you can recreate
# the Makefile by running just config.status.

# === Variables set by config.stat ===

srcdir=		@srcdir@
VPATH=		@srcdir@

CC=		@CC@
RANLIB=		@RANLIB@
DEFS=		@DEFS@
LIBOBJS=	@LIBOBJS@
LIBS=		@LIBS@


# === Other things that are customizable but not by configure ===

TOP=		..
INCLDIR=	$(TOP)/Py
OPT=		-g
CFLAGS=		$(OPT) -I$(INCLDIR) $(DEFS)

AR=		ar
MKDEP=		mkdep
SHELL=		/bin/sh


# === Fixed definitions ===

OBJS=		\
		arraymodule.o \
		bltinmodule.o \
		ceval.o cgensupport.o compile.o \
		errors.o \
		frozenmain.o \
		getmtime.o graminit.o \
		import.o \
		marshal.o mathmodule.o modsupport.o \
		parsermodule.o posixmodule.o pythonmain.o pythonrun.o \
		regexmodule.o regexpr.o \
		stropmodule.o structmember.o structmodule.o sysmodule.o \
		timemodule.o traceback.o \
		version.o \
		$(LIBOBJS)

LIB=		libPython.a

MYLIBS=		$(LIB) ../Objects/libObjects.a ../Parser/libParser.a

SYSLIBS=	-lm


# === Rules ===

all:		$(LIB) python

$(LIB):		$(OBJS)
		$(AR) cr $(LIB) $(OBJS)
		$(RANLIB) $(LIB)

python:		config.o $(MYLIBS)
		$(CC) config.o $(MYLIBS) $(LIBS) $(SYSLIBS) -o python

config.o:	Makefile

clean:
		-rm -f *.o core *~ [@,#]* *.old *.orig *.rej

clobber:	clean
		-rm -f *.a python tags TAGS

Makefile:	Makefile.in $(TOP)/config.status
		CONFIG_FILES=Makefile $(SHELL) $(TOP)/config.status

depend:		$(SRCS)
		$(MKDEP) $(CFLAGS) $(SRCS) $(PGENSRCS)

# DO NOT DELETE THIS LINE -- mkdep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.
# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
