#define single_input 256
#define file_input 257
#define eval_input 258
#define decorator 259
#define decorators 260
#define funcdef 261
#define parameters 262
#define varargslist 263
#define fpdef 264
#define fplist 265
#define stmt 266
#define simple_stmt 267
#define small_stmt 268
#define expr_stmt 269
#define augassign 270
#define print_stmt 271
#define del_stmt 272
#define pass_stmt 273
#define flow_stmt 274
#define break_stmt 275
#define continue_stmt 276
#define return_stmt 277
#define yield_stmt 278
#define raise_stmt 279
#define import_stmt 280
#define import_as_name 281
#define dotted_as_name 282
#define dotted_name 283
#define global_stmt 284
#define exec_stmt 285
#define assert_stmt 286
#define compound_stmt 287
#define if_stmt 288
#define while_stmt 289
#define for_stmt 290
#define try_stmt 291
#define except_clause 292
#define suite 293
#define test 294
#define and_test 295
#define not_test 296
#define comparison 297
#define comp_op 298
#define expr 299
#define xor_expr 300
#define and_expr 301
#define shift_expr 302
#define arith_expr 303
#define term 304
#define factor 305
#define power 306
#define atom 307
#define listmaker 308
#define testlist_gexp 309
#define lambdef 310
#define trailer 311
#define subscriptlist 312
#define subscript 313
#define sliceop 314
#define exprlist 315
#define testlist 316
#define testlist_safe 317
#define dictmaker 318
#define classdef 319
#define arglist 320
#define argument 321
#define list_iter 322
#define list_for 323
#define list_if 324
#define gen_iter 325
#define gen_for 326
#define gen_if 327
#define testlist1 328
#define encoding_decl 329
